{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","Swal","fire","title","icon","text","allowOutsideClick","allowEnterKey","allowEscapeKey","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KA6B9C,OACI,sBAAMC,SAtBW,SAAAC,GACjBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAEdO,IAAKC,KAAK,CACNC,MAAO,QACPC,KAAM,QACNC,KAAMZ,EAAWK,OAAOC,OAAS,EAAG,qDAAqD,0BACzFO,mBAAmB,EACnBC,eAAe,EACfC,gBAAgB,KAQxB,SACI,uBACIC,KAAK,OACLC,MAAOjB,EACPkB,SA9Bc,SAAAf,GACtBF,EAAcE,EAAEgB,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRtB,MAAOqB,EAAIrB,MACXa,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXM,EAAc,SAAC,GAAwB,EAArBH,GAAsB,IAAlBtB,EAAiB,EAAjBA,MAAOa,EAAU,EAAVA,IAItC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAKe,IAAK5B,IACrB,4BAAIA,QCJH6B,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAT,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B6B,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNvB,EAAQC,GACPuB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGlB,CAAEnB,IACEoB,EDbuBK,CAAazB,GAAjCY,EAFuB,EAE7BL,KAAcY,EAFe,EAEfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAoDf,IAEnDmB,GAAW,wCAEZ,qBAAKJ,UAAU,+CAAf,SAEQH,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBe,EAAe,WAAM,MAKMhD,mBAAS,CAAC,SALhB,mBAKvBiD,EALuB,KAKXlD,EALW,KAY9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQkD,EAAWlB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAWA,GADNA,Y,YCnBjC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.599e50a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');            \r\n        }else{\r\n            Swal.fire({\r\n                title: \"Error\",\r\n                icon: \"error\",\r\n                text: inputValue.trim().length > 0? \"Longitud incorrecta, deben ser minimo 3 caracteres\":\"Debes ingresar un texto\",\r\n                allowOutsideClick: false,\r\n                allowEnterKey: false,\r\n                allowEscapeKey: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async ( category ) => {\r\n        \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=dbPE7JDPZSL03MA1R0u2kEgPD7T5CbJn`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        \r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs\r\n\r\n        \r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    // console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid  animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n    export const useFetchGifs = (category) => {\r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true,\r\n        });\r\n\r\n        useEffect(() => {\r\n            getGifs(category)\r\n            .then(imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n        }, [ category]);\r\n        return state; // {data: [], loading: true};\r\n    }\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    // const categories = ['One Pounch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['Goku'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'Hunter x Hunter'])\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category= {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport 'animate.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}